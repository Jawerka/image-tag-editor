name: Build Image Tag Editor Executable

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'
  release:
    types: [published]

jobs:
  pyinstaller-build:
    runs-on: windows-latest
    permissions: write-all
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Verify Dependencies
        run: |
          python -c "import pandas; import numpy; import PyQt6; print('All dependencies imported successfully')"

      - name: Create Executable
        run: |
          pyinstaller build/ImageTagEditor.spec

      - name: List dist directory
        run: tree dist /F /A

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ImageTagEditor-Windows
          path: dist/ImageTagEditor.exe

      - name: Scan Executable with VirusTotal
        id: virustotal_scan_executable
        uses: crazy-max/ghaction-virustotal@v4
        with:
          vt_api_key: ${{ secrets.VIRUSTOTAL_API }}
          files: |
            dist/ImageTagEditor.exe
        continue-on-error: true

      - name: Scan Source File with VirusTotal
        id: virustotal_scan_source
        uses: crazy-max/ghaction-virustotal@v4
        with:
          vt_api_key: ${{ secrets.VIRUSTOTAL_API }}
          files: |
            src/main.py
        continue-on-error: true

      - name: Create Release Notes
        shell: bash
        run: |
          echo "## What's New in v1.3.0" > release_notes.txt
          echo "" >> release_notes.txt
          echo "### ðŸŽ¨ NEW: Special Tag Highlighting System" >> release_notes.txt
          echo "- **Artist: tags** - Blue highlighting (#64B5F6, 40% transparency)" >> release_notes.txt
          echo "- **OC: tags** - Green highlighting (#81C784, 40% transparency)" >> release_notes.txt
          echo "- **Quantity tags** (solo, duo, trio, group, crowd) - Yellow highlighting (#FFB74D, 40% transparency)" >> release_notes.txt
          echo "- **Species tags** (pony, earth pony, pegasus, unicorn, alicorn, bat pony, dragon, etc.) - Purple highlighting (#BA68C8, 40% transparency)" >> release_notes.txt
          echo "- Real-time highlighting in both input field and suggestions list" >> release_notes.txt
          echo "- Support for various tag formats (underscores, spaces, plus signs)" >> release_notes.txt
          echo "- Non-intrusive design with 40% transparency colors" >> release_notes.txt
          echo "" >> release_notes.txt
          echo "### ðŸ”§ Previous Improvements" >> release_notes.txt
          echo "- Added comprehensive data validation and debugging tools" >> release_notes.txt
          echo "- Implemented new tag suggestion testing framework" >> release_notes.txt
          echo "- Enhanced development environment with debugging utilities" >> release_notes.txt
          echo "- Added OC (Original Character) tag debugging functionality" >> release_notes.txt
          echo "- Improved test coverage with multiple test datasets" >> release_notes.txt
          echo "- Added comprehensive development documentation and setup guide" >> release_notes.txt
          echo "- Enhanced tag autocomplete with intelligent substring matching" >> release_notes.txt
          echo "- Added F-key navigation hotkeys (F1/F2 for navigation, F5 for refresh, etc.)" >> release_notes.txt
          echo "- Improved dark theme design with consistent styling" >> release_notes.txt
          echo "- Better error handling and user-friendly dialogs" >> release_notes.txt
          echo "- Automatic database download dialog when derpibooru.csv is missing" >> release_notes.txt
          echo "- Enhanced performance with caching and optimized image loading" >> release_notes.txt
          echo "- Added macro system for quick tag insertion" >> release_notes.txt
          echo "- Improved important tags reordering functionality" >> release_notes.txt
          echo "" >> release_notes.txt
          echo "## Installation" >> release_notes.txt
          echo "" >> release_notes.txt
          echo "1. Download **ImageTagEditor.exe** from the assets below" >> release_notes.txt
          echo "2. Download **derpibooru.csv** from [A1111 Tags Repository](https://github.com/DominikDoom/a1111-sd-webui-tagcomplete/tree/main/tags)" >> release_notes.txt
          echo "3. Place both files in the same folder" >> release_notes.txt
          echo "4. Run ImageTagEditor.exe" >> release_notes.txt
          echo "" >> release_notes.txt
          echo "## System Requirements" >> release_notes.txt
          echo "" >> release_notes.txt
          echo "- Windows 10/11 (x64)" >> release_notes.txt
          echo "- Microsoft Visual C++ Redistributable (automatically installed on most systems)" >> release_notes.txt
          echo "" >> release_notes.txt
          if [ "${{ steps.virustotal_scan_executable.outcome }}" == "success" ] && [ "${{ steps.virustotal_scan_source.outcome }}" == "success" ]; then
            echo "#### VirusTotal Security Report" >> release_notes.txt
            echo "" >> release_notes.txt
            echo "- [ImageTagEditor.exe](${{ steps.virustotal_scan_executable.outputs.analysis }})" >> release_notes.txt
            echo "- [main.py](${{ steps.virustotal_scan_source.outputs.analysis }})" >> release_notes.txt
          else
            echo "#### Security Information" >> release_notes.txt
            echo "" >> release_notes.txt
            echo "This executable is built from open source code and scanned for security. The source code is available in this repository for review." >> release_notes.txt
          fi

      - name: Create Draft Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $tag = if ($env:GITHUB_REF -match "refs/tags/(.*)") { $matches[1] } else { "v1.3.0" }
          gh release create "$tag" dist/ImageTagEditor.exe --draft --title "Image Tag Editor $tag" --notes-file release_notes.txt
        shell: powershell
